/*
Example on "background" property in CSS:
*/
.box{
    background: linear-gradient(105deg, rgba(255,255,255,.2) 39%, rgba(51,56,57,1)
    96) center center / 400px 200px no-repeat,
    url(big-star.png) center no-repeat, rebeccapurple;
}

/*
    üìù  If you use "background-color" property while the image in "background-image" has transparency the color will be in the background of the image.

    =   What is "background-repeat" property?
    -   It's the property used to control the tiling of behaviour of images.

    =   What are the values of "background-repeat" property?
    -   They're:
            +   "no-repeat" --> stopping the background from repeating altogether.
            +   "repeat-x" --> repeat horizontally
            +   "repeat-y" --> repeat vertically
            +   "repeat" --> this is the default; it repeats in both of the directions.
*/

/*
An example of background repeats:
*/
/*.container{
    display: flex;
}*/
.no-rep{
    display: inline-block;
    width: 250px;
    height: 250px;
    border: 5px solid black;
    margin-right: 25px;
    margin-bottom: 25px;
    background-image: url(big-star-1-50x50.png);
    background-repeat: no-repeat;
}.no-rep::before{content:"no-repeat:";}

.x-rep{
    display: inline-block;
    height: 250px;
    width: 250px;
    border: 5px black solid;
    background-image: url(big-star-1-50x50.png);
    background-repeat: repeat-x;
    margin-bottom: 25px;
}.x-rep::before{content:"repeat-x:";}

.y-rep{
    display: inline-block;
    height: 250px;
    width: 250px;
    border: 5px black solid;
    background-image: url(big-star-1-50x50.png);
    background-repeat: repeat-y;
    margin-right: 25px;
    margin-bottom: 25px;
}.y-rep::before{content:"repeat-y:"}

.repeat{    
    display: inline-block;
    height: 250px;
    width: 250px;
    border: 5px black solid;
    background-image: url(big-star-1-50x50.png);
    background-repeat: repeat;
}.repeat::before{content:"repeat:"}

/*
    =   What is "background-image" property?
    -   It's a property which can take length or percentage values, to size the image to fit inside the box.

    =   What are the values can be used in "background-size" property?
    -   They're:
            +   "cover": The browser will make the image just large enough so that it's completely covers the box area while still retaining its respect ratio.
                         In this case, part of the image is likely to end up outside the box.
            +   "contain": The browser will make the image the right size to fit inside the box.
                           In this case, you may end up with gaps on either side or on the top and the bottom of the image, if the aspect ratio of the image is different
                           from the box.
*/
.bg-size_1{
    background-image: url(balloons.jpg);
    background-size: cover;
    width: 100px;
    height: 100px;
    margin-bottom: 25px;
}

.bg-size_2{
    background-image: url(balloons.jpg);
    background-size: contain;
    width: 100px;
    height: 100px;
    margin-bottom: 25px;
}

/*
    =   What is the "background-position" property?
    -   It's a property which allows you to choose the position in which the background image appears on the box it is applied to.

    =   How to use "background-position" property?
    -   This uses a coordinates system in which you the top-left-hand corner of the box is (0,0), and the box is positioned along the horizontal (x) and Vertical (y)
        axes.

    =   What is the default value for "background-position" property?
    -   It's the value (0,0).

    =   What is the value of "background-position" property?
    -   It's value which takes two individual values, a horizontal value followed by a vertical value.

    =   What are the keyword value "top" and "right" in "background-position" property?
    -   "top" keyword value is used to center the background image at the top horizontally.
        "right" keyword value is used to center the background image at the right vertically.

    üìù  You can also mix keyword values with lengths or percentages, in which case the first value must refer to the horizontal position or offset and the second
        vertical.
*/
.bg-pos_1{
    background-image: url(big-star-1-50x50.png);
    background-repeat: no-repeat;
    width: 100px;
    height: 100px;
    background-position: (0,0);
    border: 5px black solid;
}

.bg-pos_2{
    background-image: url(big-star-1-50x50.png);
    background-repeat: no-repeat;
    width: 100px;
    height: 100px;
    background-position: top;
    border: 5px black solid;
}

.bg-pos_3{
    background-image: url(big-star-1-50x50.png);
    background-repeat: no-repeat;
    width: 100px;
    height: 100px;
    background-position: right;
    border: 5px black solid;
}

.bg-pos_4{
    background-image: url(big-star-1-50x50.png);
    background-repeat: no-repeat;
    width: 100px;
    height: 100px;
    background-position: top center;
    border: 5px black solid;
}

.bg-pos_5{
    background-image: url(big-star-1-50x50.png);
    background-repeat: no-repeat;
    width: 100px;
    height: 100px;
    background-position: 20px 10%;
    border: 5px black solid;
}

.bg-pos_6{
    background-image: url(big-star-1-50x50.png);
    background-repeat: no-repeat;
    width: 100px;
    height: 100px;
    background-position: right;
    background-position: 20px top;
    border: 5px black solid;
}

/*
    Finally, you can also use a 4-value syntax in order to indicate a distance from certain edges of the box - the length unit, in this case, is an offset from the value 
    that precedes it.

    In the example below we are positioning the background 20px from the top and 10px from the right.
*/
.bg-pos_7{
    background-image: url(big-star-1-50x50.png);
    background-repeat: no-repeat;
    width: 100px;
    height: 100px;
    background-position: right;
    background-position: top 20px right 10px;
    border: 5px black solid;
}

/*
    =   Is "background-position" property a shorthand property?
    -   It's right, "background-position" property is a shorthand for "background-position-x" and "background-position-y", which allow you to set the different axis 
        position values individually.

    =   What is gradient backgrounds?
    -   A gradient - when used for a background - acts just like an image and is also set by using the "background-image" property.

    =   What is the linear gradient?
    -   It's the gradient which is stretched over the whole box.
    
    =   What is the radial gradient?
    -   It's the gradient which have a set size, which therefore repeats.

    Here is an example in which 'a' is the linear gradient and 'b' is a radial gradient.
*/
.a{
    margin: 20px;
    border: 1px;
    padding: 9.600px;
    height: 78.800px;
    width: 164.475px;
    background-image: linear-gradient(105deg, rgba(0,249,255,1) 39%, rgba(51,56,57,1) 96%);
}
.b{
    margin: 20px;
    border: 1px;
    padding: 9.600px;
    height: 78.800px;
    width: 164.475px;
    background-image: radial-gradient(circle, rgba(0,249,255,1) 39%, rgba(51,56,57,1) 96%);
    background-size: 100px 50px;
}
.wrapper{
    display:flex;
}

/*
    =   What is multiple background images?
    -   It's that you can have multiple background images - you specify multiple "background-image" values in a single property value, separating each one with a comma.

        When you have multiple background images you may end up with background images overlapping each other.

        The backgrounds will layer with the listed background image at the bottom of the stack., and each previous image stacking on the top of the one that follows it in
        the code.

        üìù  Gradients can be happily mixed with regular background images.

        The other "background-*" properties can also have comma-separated values in the same way as "background-image", like:`
*/
.MultipleBG{
    margin: 20px;
    border: 1px;
    padding: 9.600px;
    height: 78.800px;
    width: 164.475px;
    background-image: url(image1.png), url(image2.png), url(image3.png), url(image4.png);
    background-repeat: no-repeat, repeat-x, repeat;
    background-position: 10px 20px, top right;
}
/*
    =   What happens when different properties have different diffferent number of values?
    -   The answer is that the smaller number of values will cycle - in the above example there are four background images but only two "background-position" values.

        The first two position values will be applied to the first two images, then they will cycle back around again - "image3" will be given the first position value, 
        and "image4" will be given the second position value.

    =   What is background attachment? 
    -   It's an option we have available for background is specifying how they scroll when the content scrolls.
        
        Background attachment is controlled using "background-attachment" property, which can take the following values:
            +   "scroll": Causes the element's background to scroll when the page is scrolled.
                          If the element is scrolled, the background does not move.
                          In effect, the background is fixed to the same position on the page, so it scrolls as the page scrolls.

            +   "fixed":  It causes an element's background to be fixed to the viewport so that it doesn't scroll when the page or element content is scrolled.
                          It will always remain in the same position on the screen.  

            +   "local":  Fixes the background to the element it is set on, so when you scroll the element, the background scrolls with it. 
*/
.BgAttScroll{
    margin: 20px;
    border: 1px;
    padding: 9.600px;
    height: 32px;
    width: 32px;
    background-image: url(image1.png);
    background-attachment: scroll;
    overflow-y: scroll;
}
.BgAttFixed{
    margin: 20px;
    border: 1px;
    padding: 9.600px;
    height: 32px;
    width: 32px;
    background-image: url(image1.png);
    background-attachment: fixed;
    overflow-y: scroll;
}
.BgAttLocal{
    margin: 20px;
    border: 1px;
    padding: 9.600px;
    height: 32px;
    width: 32px;
    background-image: url(image1.png);
    background-attachment: local;
    overflow-y: scroll;
}
.BgAttGr{
    display: flex;
}

/*
    =   What should I do if using multiple backgrounds styled by "background" property?
    -   If using multiple backgrounds, you need to specify all of the properties for the first background, then add your next background after comma.

    In the example below we have a gradient with a size and position, then an image background with "no-repeat" and a position, then a color.

    =   What are the rules of using "background" shorthand property?
    -   They're:
            +   A "background-color" may only be specified after the final comma.
            +   The value of "background-size" may only be included immediately after "background-position", separated with the '/' character, like this: "center/80%".
*/
.BgShorthand{
    width: 500px;
    height: 300px;  
    background: linear-gradient(105deg, rgba(255,255,255,.2) 39%, rgba(51,56,57,1) 96%) center center / 400px 200px no-repeat, url(big-star-1-50x50.png) center no-repeat,
                rebeccapurple;
     margin-bottom: 10px;
}

/*
    Accessibility notes:
    ____________________

    üìù  When placing text on top of background image or color, you should take care that you have enough contrast for the text to be ligible to your visitors, you should
        also specify a "background-color" that will allow the text to be legible if the image does not load.

    üìù  Screen readers cannot parse background images.

        Screen readers cannot parse background images, so they should be purely decoration.

        Any important content should be part of the HTML page and not contained in a background.
*/

/*
    =   Are top, right, bottom and left writing mode based?
    -   These top, right, bottom and left border properties also have mapped logical properties that relate to the writing mode of the document (e.g. left-to-right or 
        right-to-left, or top-to-bottom).

    =   What are the rounded corners?
    -   Rounding corners on a box is achieved by using the "border-radius" property and associated longhands which relate to each corner of the box.
        
        Two lengthes or percentages may be used as a value, the first value defining the horizontal radiu, and the second vertical radius.

    Here there are two examples; the first is to set all the four corners of a box to 10px radius, the second is to make the top right corner have a horizontal radius of
    1em, and a vertical radius of 10%.
*/
.Bd-rad_1{
    width: 500px;
    height: 300px;
    background-color: blue; 
    border-radius: 10px;
    margin-bottom: 10px;
}
.Bd-rad_2{
    width: 500px;
    height: 300px;
    background-color: blue; 
    border-top-right-radius: 1em 10%;
}

/*------------------------------------------------------------------------------------------Done----------------------------------------------------------------------*/